name: Build & Deploy Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      # Install dev deps (tailwindcss) from package.json
      - name: Install dependencies
        run: npm ci

      # Build Tailwind straight into the dist/docs folder
      - name: Build Tailwind CSS
        env:
          NODE_ENV: production
        run: |
          mkdir -p dist/docs/assets
          npx tailwindcss -c tailwind.config.js \
            -i src/styles/tailwind.css \
            -o dist/docs/assets/tailwind.css \
            --minify

      # Stage the rest of the site (HTML/JS/assets from docs)
      - name: Stage site files
        run: |
          mkdir -p dist/docs
          cp -R docs/* dist/docs/

      # Create runtime config from repo secrets (not committed)
      - name: Write config.js
        run: |
          cat > dist/docs/config.js <<'EOF'
          window.__ENV = {
            SUPABASE_URL: "${{ secrets.SUPABASE_URL }}",
            SUPABASE_KEY: "${{ secrets.SUPABASE_KEY }}"
          };
          EOF

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4